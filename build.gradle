buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}

apply plugin: 'forge'

version = "1.7.10-2.2.17"
group= "com.teamderpy.shouldersurfing" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ShoulderSurfing"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
	accessTransformers.add(file('src/main/resources/META-INF/shouldersurfing_at.cfg'))
	mappings = "stable_12"
}

sourceSets {
    api
    main {
        java {
            compileClasspath += api.output
            runtimeClasspath += api.output
        }
    }
}

configurations {
    apiCompile.extendsFrom(compile)
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
	
    compile('org.ow2.asm:asm:5.2') {
        force = true
    }
    
    compile('org.ow2.asm:asm-analysis:5.2') {
        force = true
    }
    
    compile('org.ow2.asm:asm-tree:5.2') {
        force = true
    }
    
    compile('org.ow2.asm:asm-util:5.2') {
        force = true
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
	
	duplicatesStrategy = 'include'
}

jar {
	manifest {
		attributes([
			"Specification-Title": "ashouldersurfing",
			"Specification-Vendor": "Exopandora",
			"Specification-Version": "1",
			"Implementation-Title": project.name,
			"Implementation-Version": "${version}",
			"Implementation-Vendor" :"Exopandora",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"FMLAT": "shouldersurfing_at.cfg",
			"FMLCorePlugin": "com.teamderpy.shouldersurfing.asm.ShoulderPlugin",
			"FMLCorePluginContainsFMLMod": "false"
		])
	}
}
